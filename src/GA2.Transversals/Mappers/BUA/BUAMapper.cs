    using AutoMapper;
using GA2.Application.Dto;
using GA2.Application.Dto.Catalogs;
using GA2.Domain.Entities;

namespace GA2.Transversals.Mappers
{
    /// <summary>
    /// Mapper profile aplication BUA
    /// <author>Nicolas Florez Sarrazola</author>
    /// <date>24/02/2021</date>
    /// </summary>
    public class BUAMapper : Profile
    {
        public BUAMapper()
        {

            // Model Cliente Cesantias Dto Client Cesantias
            CreateMap<ClienteCedulaDto, ClienteCedula>()
                .ForMember(x => x.CLI_ID, map => map.MapFrom(dto => dto.IdCliente))
                .ForMember(x => x.TPA_ID, map => map.MapFrom(dto => dto.IdTipoActor))
                .ForMember(x => x.TID_ID, map => map.MapFrom(dto => dto.IdTipoIdentificacion))
                .ForMember(x => x.CLI_IDENTIFICACION, map => map.MapFrom(dto => dto.Identificacion))
                .ForMember(x => x.CLI_PRIMER_NOMBRE, map => map.MapFrom(dto => dto.PrimerNombre))
                .ForMember(x => x.CLI_SEGUNDO_NOMBRE, map => map.MapFrom(dto => dto.SegundoNombre))
                .ForMember(x => x.CLI_PRIMER_APELLIDO, map => map.MapFrom(dto => dto.PrimerApellido))
                .ForMember(x => x.CLI_SEGUNDO_APELLIDO, map => map.MapFrom(dto => dto.SegundoApellido))
                .ForMember(x => x.CAT_ESTADO_CIVIL, map => map.MapFrom(dto => dto.EstadoCivil))
                .ForMember(x => x.CAT_SEXO, map => map.MapFrom(dto => dto.Sexo))
                .ForMember(x => x.CLI_FECHA_EXPEDICION, map => map.MapFrom(dto => dto.FechaExpedicionDocumento))
                .ForMember(x => x.CLI_FECHA_NACIMIENTO, map => map.MapFrom(dto => dto.FechaNacimiento))
                .ForMember(x => x.CLI_UNIDAD, map => map.MapFrom(dto => dto.unidadCliente))
                .ForMember(x => x.CTG_ID, map => map.MapFrom(dto => dto.IdCategoria))
                .ForMember(x => x.DPC_ID, map => map.MapFrom(dto => dto.IdCiudadNacimiento))
                .ForMember(x => x.DPC_ID_IDENTIFICACION_EXPEDIDA, map => map.MapFrom(dto => dto.IdCiudadExpedicionDocumento))
                .ForMember(x => x.DPD_ID, map => map.MapFrom(dto => dto.IdDepartamentoNacimiento))
                .ForMember(x => x.DPD_ID_IDENTIFICACION_EXPEDIDA, map => map.MapFrom(dto => dto.IdDepartamentoExpedicionDocumento))
                .ForMember(x => x.FRZ_ID, map => map.MapFrom(dto => dto.IdFuerza))
                .ForMember(x => x.GRD_ID, map => map.MapFrom(dto => dto.IdGrado))
                .ForMember(x => x.CLI_PROFESION, map => map.MapFrom(dto => dto.IdProfesion))
                .ReverseMap();

            // Model Cliente Cesantias Dto Client Cesantias
            CreateMap<ClienteCesantiasDto, ClienteCesantias>()
                .ForMember(x => x.CLI_ID, map => map.MapFrom(dto => dto.IdCliente))
                .ForMember(x => x.TPA_ID, map => map.MapFrom(dto => dto.IdTipoActor))
                .ForMember(x => x.TID_ID, map => map.MapFrom(dto => dto.IdTipoIdentificacion))
                .ForMember(x => x.CLI_IDENTIFICACION, map => map.MapFrom(dto => dto.Identificacion))
                .ForMember(x => x.CLI_PRIMER_NOMBRE, map => map.MapFrom(dto => dto.PrimerNombre))
                .ForMember(x => x.CLI_SEGUNDO_NOMBRE, map => map.MapFrom(dto => dto.SegundoNombre))
                .ForMember(x => x.CLI_PRIMER_APELLIDO, map => map.MapFrom(dto => dto.PrimerApellido))
                .ForMember(x => x.CLI_SEGUNDO_APELLIDO, map => map.MapFrom(dto => dto.SegundoApellido))
                .ForMember(x => x.CORREO_PERSONAL, map => map.MapFrom(dto => dto.CorreoPersonal))
                .ForMember(x => x.TELEFONO_RESIDENCIA, map => map.MapFrom(dto => dto.TelefonoResidencia))
                .ForMember(x => x.NO_CELULAR, map => map.MapFrom(dto => dto.NumeroCelular))
                .ForMember(x => x.DRC_DIRECCION, map => map.MapFrom(dto => dto.Direccion))
                .ReverseMap();

            // Model Cliente Dto Client
            CreateMap<ClienteDto, Cliente>()
                .ForMember(x => x.CLI_ID, map => map.MapFrom(dto => dto.IdCliente))
                .ForMember(x => x.TPA_ID, map => map.MapFrom(dto => dto.IdTipoActor))
                .ForMember(x => x.TID_ID, map => map.MapFrom(dto => dto.IdTipoIdentificacion))
                .ForMember(x => x.CLI_IDENTIFICACION, map => map.MapFrom(dto => dto.Identificacion))
                .ForMember(x => x.CLI_FECHA_EXPEDICION, map => map.MapFrom(dto => dto.FechaExpedicionDocumento))
                .ForMember(x => x.DPP_ID_PAIS_EXPEDICION, map => map.MapFrom(dto => dto.IdPaisExpedicionDocumento))
                .ForMember(x => x.DPC_ID_IDENTIFICACION_EXPEDIDA, map => map.MapFrom(dto => dto.IdCiudadExpedicionDocumento))
                .ForMember(x => x.DPD_ID_IDENTIFICACION_EXPEDIDA, map => map.MapFrom(dto => dto.IdDepartamentoExpedicionDocumento))
                .ForMember(x => x.CLI_LUGAR_EXPEDICION, map => map.MapFrom(dto => dto.LugarExpedicionExtranjero))
                .ForMember(x => x.CLI_CODIGO_MILITAR, map => map.MapFrom(dto => dto.CodigoMilitar))
                .ForMember(x => x.CLI_PRIMER_NOMBRE, map => map.MapFrom(dto => dto.PrimerNombre))
                .ForMember(x => x.CLI_SEGUNDO_NOMBRE, map => map.MapFrom(dto => dto.SegundoNombre))
                .ForMember(x => x.CLI_PRIMER_APELLIDO, map => map.MapFrom(dto => dto.PrimerApellido))
                .ForMember(x => x.CLI_SEGUNDO_APELLIDO, map => map.MapFrom(dto => dto.SegundoApellido))
                .ForMember(x => x.CLI_FECHA_NACIMIENTO, map => map.MapFrom(dto => dto.FechaNacimiento))
                .ForMember(x => x.DPP_ID_PAIS_NACIMIENTO, map => map.MapFrom(dto => dto.IdPaisNacimiento))
                .ForMember(x => x.DPD_ID, map => map.MapFrom(dto => dto.IdDepartamentoNacimiento))
                .ForMember(x => x.DPC_ID, map => map.MapFrom(dto => dto.IdCiudadNacimiento))
                .ForMember(x => x.CLI_LUGAR_NACIMIENTO, map => map.MapFrom(dto => dto.LugarNacimientoExtranjero))
                .ForMember(x => x.CAT_SEXO, map => map.MapFrom(dto => dto.Sexo))
                .ForMember(x => x.CAT_ESTADO_CIVIL, map => map.MapFrom(dto => dto.EstadoCivil))
                .ForMember(x => x.CLI_PROFESION, map => map.MapFrom(dto => dto.IdProfesion))
                .ForMember(x => x.CLI_UNIDAD, map => map.MapFrom(dto => dto.Unidad))
                .ForMember(x => x.CTG_ID, map => map.MapFrom(dto => dto.IdCategoria))
                .ForMember(x => x.FRZ_ID, map => map.MapFrom(dto => dto.IdFuerza))
                .ForMember(x => x.GRD_ID, map => map.MapFrom(dto => dto.IdGrado))
                .ForMember(x => x.UEJ_ID, map => map.MapFrom(dto => dto.IdUnidadEjecutora))
                .ForMember(x => x.CLI_FECHA_INSCRIPCION, map => map.MapFrom(dto => dto.FechaInscripcion))
                .ForMember(x => x.CLI_FECHA_ALTA, map => map.MapFrom(dto => dto.FechaAlta))
                .ForMember(x => x.CLI_REGIMEN, map => map.MapFrom(dto => dto.Regimen))
                .ForMember(x => x.CTS_SLP, map => map.MapFrom(dto => dto.FechaAltaCalculada))
                .ForMember(x => x.CLI_FECHA_REINTEGRO, map => map.MapFrom(dto => dto.FechaReintegro))
                .ForMember(x => x.ECL_ID, map => map.MapFrom(dto => dto.EstadoCliente))
                .ForMember(x => x.CLI_VALIDACION, map => map.MapFrom(dto => dto.NumeroValidacion))
                .ForMember(x => x.CLI_ID_PATROCINADOR, map => map.MapFrom(dto => dto.IdPatrocinador))
                .ForMember(x => x.CLI_PARTICIPACION, map => map.MapFrom(dto => dto.Participacion))
                .ForMember(x => x.CLI_RESOLUCION, map => map.MapFrom(dto => dto.NumeroResolucion))
                .ForMember(x => x.CLI_VALIDACION_BIOMETRICA, map => map.MapFrom(dto => dto.ValidacionBiometrica))
                .ForMember(x => x.CLI_INTEGRACION_GA2_PAYLOAD, map => map.MapFrom(dto => dto.Payload))
                .ForMember(x => x.CIE_ID, map => map.MapFrom(dto => dto.IdInformacionEconomica))
                .ForMember(x => x.ACC_ID, map => map.MapFrom(dto => dto.IdActividadEconomica))
                .ForMember(x => x.CIE_FECHA_INFO_ECONOMICA, map => map.MapFrom(dto => dto.FechaCorte))
                .ForMember(x => x.CIE_INGRESO_MENSUAL, map => map.MapFrom(dto => dto.IngresoMensual))
                .ForMember(x => x.CIE_EGRESO_MENSUAL, map => map.MapFrom(dto => dto.EgresoMensual))
                .ForMember(x => x.CIE_TOTAL_ACTIVOS, map => map.MapFrom(dto => dto.TotalActivos))
                .ForMember(x => x.CIE_TOTAL_PASIVOS, map => map.MapFrom(dto => dto.TotalPasivos))
                .ForMember(x => x.CIE_TOTAL_PATRIMONIO, map => map.MapFrom(dto => dto.TotalPatrimonio))
                .ForMember(x => x.CIE_INGRESO_ADICIONAL, map => map.MapFrom(dto => dto.IngresoAdicional))
                .ForMember(x => x.CIE_CONCEPTO_INGRESO_ADICIONAL, map => map.MapFrom(dto => dto.ConceptoIngresosAdicionales))
                .ForMember(x => x.CIE_TRANS_EXTRANJERO, map => map.MapFrom(dto => dto.TransaccionesMonedaExtranjera))
                .ForMember(x => x.MND_ID, map => map.MapFrom(dto => dto.IdMoneda))
                .ForMember(x => x.CIE_VALOR_TRANSFERENCIA, map => map.MapFrom(dto => dto.MontoTransaccionesExtranjero))
                .ForMember(x => x.DRC_ID, map => map.MapFrom(dto => dto.IdDireccion))
                .ForMember(x => x.DRC_CONSECUTIVO, map => map.MapFrom(dto => dto.ConsecutivoDireccion))
                .ForMember(x => x.DPP_ID_RESIDENCIA, map => map.MapFrom(dto => dto.IdPaisResidencia))
                .ForMember(x => x.DPD_ID_RESIDENCIA, map => map.MapFrom(dto => dto.IdDepartamentoResidencia))
                .ForMember(x => x.DPC_ID_RESIDENCIA, map => map.MapFrom(dto => dto.IdCiudadResidencia))
                .ForMember(x => x.DRC_CIUDAD_RESIDENCIA_EXTRANJERO, map => map.MapFrom(dto => dto.CiudadResidenciaExtranjero))
                .ForMember(x => x.TPC_TIPO_CALLE, map => map.MapFrom(dto => dto.IdTipoCalle))
                .ForMember(x => x.DRC_NUMERO_1, map => map.MapFrom(dto => dto.NumeroCalle1))
                .ForMember(x => x.LTR_LETRA_1, map => map.MapFrom(dto => dto.IdLetra1))
                .ForMember(x => x.BS_BIS_1, map => map.MapFrom(dto => dto.IdBis1))
                .ForMember(x => x.CRD_CARDINAL_1, map => map.MapFrom(dto => dto.IdCardinal1))
                .ForMember(x => x.DRC_NUMERO_2, map => map.MapFrom(dto => dto.NumeroCalle2))
                .ForMember(x => x.LTR_LETRA_2, map => map.MapFrom(dto => dto.IdLetra2))
                .ForMember(x => x.BS_BIS_2, map => map.MapFrom(dto => dto.IdBis2))
                .ForMember(x => x.CRD_CARDINAL_2, map => map.MapFrom(dto => dto.IdCardinal2))
                .ForMember(x => x.DRC_NUMERO_3, map => map.MapFrom(dto => dto.NumeroCalle3))
                .ForMember(x => x.LTR_LETRA_3, map => map.MapFrom(dto => dto.IdLetra3))
                .ForMember(x => x.CRD_CARDINAL_3, map => map.MapFrom(dto => dto.IdCardinal3))
                .ForMember(x => x.DRC_COMPLEMENTO_DIRECCION, map => map.MapFrom(dto => dto.ComplementoDireccion))
                .ForMember(x => x.DRC_DIRECCION, map => map.MapFrom(dto => dto.Direccion))
                .ForMember(x => x.DRC_BARRIO, map => map.MapFrom(dto => dto.Barrio))
                .ForMember(x => x.TPD_ID, map => map.MapFrom(dto => dto.IdTipoDireccion))
                .ForMember(x => x.ID_SISTEMA_SIS, map => map.MapFrom(dto => dto.IdSistemaActualiza))
                .ForMember(x => x.DCE_ID, map => map.MapFrom(dto => dto.IdCorreo))
                .ForMember(x => x.DCE_CORREO, map => map.MapFrom(dto => dto.Correo))
                .ForMember(x => x.TCE_ID, map => map.MapFrom(dto => dto.IdTipoCorreo))
                .ForMember(x => x.DCE_ENVIO_INFORMACION, map => map.MapFrom(dto => dto.EnvioInformacionCorreo))
                .ForMember(x => x.DCE_ACTIVO, map => map.MapFrom(dto => dto.CorreoActivo))
                .ForMember(x => x.DTL_ID, map => map.MapFrom(dto => dto.IdTelefono))
                .ForMember(x => x.DTL_INDICATIVO_PAIS, map => map.MapFrom(dto => dto.IndicativoPaisTelefono))
                .ForMember(x => x.DTL_INDICATIVO_CIUDAD, map => map.MapFrom(dto => dto.IndicativoCiudadTelefono))
                .ForMember(x => x.DTL_TELEFONO, map => map.MapFrom(dto => dto.Telefono))
                .ForMember(x => x.TPT_ID, map => map.MapFrom(dto => dto.IdTipoTelefono))
                .ForMember(x => x.DTL_ENVIO_INFORMACION, map => map.MapFrom(dto => dto.EnvioInformacionSMS))
                .ForMember(x => x.DTL_ACTIVO, map => map.MapFrom(dto => dto.TelefonoActivo))
                .ForMember(x => x.CNY_ID, map => map.MapFrom(dto => dto.IdConyuge))
                .ForMember(x => x.CNY_TID_ID, map => map.MapFrom(dto => dto.IdTipoIdentificacionConyuge))
                .ForMember(x => x.CNY_IDENTIFICACION, map => map.MapFrom(dto => dto.IdentificacionConyuge))
                .ForMember(x => x.CNY_PRIMER_NOMBRE, map => map.MapFrom(dto => dto.PrimerNombreConyuge))
                .ForMember(x => x.CNY_SEGUNDO_NOMBRE, map => map.MapFrom(dto => dto.SegundoNombreConyuge))
                .ForMember(x => x.CNY_PRIMER_APELLIDO, map => map.MapFrom(dto => dto.PrimerApellidoConyuge))
                .ForMember(x => x.CNY_SEGUNDO_APELLIDO, map => map.MapFrom(dto => dto.SegundoApellidoConyuge))
                .ForMember(x => x.CNY_ACTIVO, map => map.MapFrom(dto => dto.ConyugeActivo))
                .ReverseMap();

            CreateMap<ClienteDto, ClienteIntegracionGA2DTO>()
                .ForMember(x => x.IdRegistro, map => map.MapFrom(dto => dto.IdCliente))
                .ForPath(x => x.TipoActor.IdTipoActor, map => map.MapFrom(dto => dto.IdTipoActor))
                .ForPath(x => x.TipoId.IdTipoId, map => map.MapFrom(dto => dto.IdTipoIdentificacion))
                .ForMember(x => x.Identificacion, map => map.MapFrom(dto => dto.Identificacion))
                .ForMember(x => x.FechaExpedicionId, map => map.MapFrom(dto => dto.FechaExpedicionDocumento))
                .ForPath(x => x.LugarExpedicion.Departamento.Pais.IdPaisEntero, map => map.MapFrom(dto => dto.IdPaisExpedicionDocumento))
                .ForPath(x => x.LugarExpedicion.IdCiudadEntero, map => map.MapFrom(dto => dto.IdCiudadExpedicionDocumento))
                .ForPath(x => x.LugarExpedicion.Departamento.IdDepartamentoEntero, map => map.MapFrom(dto => dto.IdDepartamentoExpedicionDocumento))
                .ForMember(x => x.PrimerNombre, map => map.MapFrom(dto => dto.PrimerNombre))
                .ForMember(x => x.SegundoNombre, map => map.MapFrom(dto => dto.SegundoNombre))
                .ForMember(x => x.PrimerApellido, map => map.MapFrom(dto => dto.PrimerApellido))
                .ForMember(x => x.SegundoApellido, map => map.MapFrom(dto => dto.SegundoApellido))
                .ForMember(x => x.FechaNacimiento, map => map.MapFrom(dto => dto.FechaNacimiento))
                .ForPath(x => x.CiudadNacimiento.Departamento.Pais.IdPaisEntero, map => map.MapFrom(dto => dto.IdPaisNacimiento))
                .ForPath(x => x.CiudadNacimiento.Departamento.IdDepartamentoEntero, map => map.MapFrom(dto => dto.IdDepartamentoNacimiento))
                .ForPath(x => x.CiudadNacimiento.IdCiudadEntero, map => map.MapFrom(dto => dto.IdCiudadNacimiento))
                .ForMember(x => x.Sexo, map => map.MapFrom(dto => dto.Sexo))
                .ForMember(x => x.EstadoCivil, map => map.MapFrom(dto => dto.EstadoCivil))
                .ForMember(x => x.Unidad, map => map.MapFrom(dto => dto.Unidad))
                .ForPath(x => x.Grado.Categoria.IdCategoria, map => map.MapFrom(dto => dto.IdCategoria))
                .ForPath(x => x.Grado.Fuerza.IdFuerza, map => map.MapFrom(dto => dto.IdFuerza))
                .ForPath(x => x.Grado.IdGrado, map => map.MapFrom(dto => dto.IdGrado))
                .ForMember(x => x.UnidadEjecutora, map => map.MapFrom(dto => dto.IdUnidadEjecutora))
                .ForMember(x => x.FechaInscripcion, map => map.MapFrom(dto => dto.FechaInscripcion))
                .ForMember(x => x.FechaAlta, map => map.MapFrom(dto => dto.FechaAlta))
                .ForMember(x => x.Regimen, map => map.MapFrom(dto => dto.Regimen))
                .ForPath(x => x.EstadoActualCli.IdEstado, map => map.MapFrom(dto => dto.EstadoCliente))
                .ForMember(x => x.IdPatrocinador, map => map.MapFrom(dto => dto.IdPatrocinador))
                .ForMember(x => x.Participacion, map => map.MapFrom(dto => dto.Participacion))
                .ForMember(x => x.Resolucion, map => map.MapFrom(dto => dto.NumeroResolucion))
                .ForMember(x => x.Payload, map => map.MapFrom(dto => dto.Payload))
                .ForPath(x => x.InformacionFinanciera.IngresoMensual, map => map.MapFrom(dto => dto.IngresoMensual))
                .ForPath(x => x.InformacionFinanciera.EgresoMensual, map => map.MapFrom(dto => dto.EgresoMensual))
                .ForPath(x => x.InformacionFinanciera.TotalActivos, map => map.MapFrom(dto => dto.TotalActivos))
                .ForPath(x => x.InformacionFinanciera.TotalPasivos, map => map.MapFrom(dto => dto.TotalPasivos))
                .ForPath(x => x.InformacionFinanciera.TotalPatrimonio, map => map.MapFrom(dto => dto.TotalPatrimonio))
                .ForPath(x => x.InformacionFinanciera.IngresosAdicionales, map => map.MapFrom(dto => dto.IngresoAdicional))
                .ForPath(x => x.InformacionFinanciera.ConceptoIngresosAdicionales, map => map.MapFrom(dto => dto.ConceptoIngresosAdicionales))
                .ForPath(x => x.Direccion.CiudadResidencia.Departamento.Pais.IdPaisEntero, map => map.MapFrom(dto => dto.IdPaisResidencia))
                .ForPath(x => x.Direccion.CiudadResidencia.Departamento.IdDepartamentoEntero, map => map.MapFrom(dto => dto.IdDepartamentoResidencia))
                .ForPath(x => x.Direccion.CiudadResidencia.IdCiudadEntero, map => map.MapFrom(dto => dto.IdCiudadResidencia))
                .ForPath(x => x.Direccion.DireccionResidencia, map => map.MapFrom(dto => dto.Direccion))
                .ForPath(x => x.Direccion.BarrioResidencia, map => map.MapFrom(dto => dto.Barrio))
                .ForPath(x => x.Direccion.Correo, map => map.MapFrom(dto => dto.Correo))
                .ForPath(x => x.Direccion.TipoCorreo, map => map.MapFrom(dto => dto.IdTipoCorreo))
                .ForMember(x => x.EnvioInformacion, map => map.MapFrom(dto => dto.EnvioInformacionCorreo))
                .ForMember(x => x.EnvioInformacion, map => map.MapFrom(dto => dto.EnvioInformacionSMS))
                .ForPath(x => x.Direccion.TelefonoMostrar, map => map.MapFrom(dto => dto.Telefono))
                .ForPath(x => x.Direccion.TipoTelefono, map => map.MapFrom(dto => dto.IdTipoTelefono))
                .ForPath(x => x.Conyuge.TipoIdConyuge.IdTipoId, map => map.MapFrom(dto => dto.IdTipoIdentificacionConyuge))
                .ForPath(x => x.Conyuge.IdentificacionConyuge, map => map.MapFrom(dto => dto.IdentificacionConyuge))
                .ForPath(x => x.Conyuge.PrimerNombreConyuge, map => map.MapFrom(dto => dto.PrimerNombreConyuge))
                .ForPath(x => x.Conyuge.SegundoNombreConyuge, map => map.MapFrom(dto => dto.SegundoNombreConyuge))
                .ForPath(x => x.Conyuge.PrimerApellidoConyuge, map => map.MapFrom(dto => dto.PrimerApellidoConyuge))
                .ForPath(x => x.Conyuge.SegundoApellidoConyuge, map => map.MapFrom(dto => dto.SegundoApellidoConyuge))
                .ForPath(x => x.Cuentas, opt => opt.Ignore())
                .ForMember(x => x.AportesCategoria, opt => opt.Ignore())
                .ForMember(x => x.Dependiente, opt => opt.Ignore())
                .ReverseMap();


            // Model ClienteSinCrear Dto ClienteSinCrear                  
            CreateMap<ClienteSinCrearDTO, ClienteSinCrear>()

                .ForMember(x => x.DIGITO_FUERZA, map => map.MapFrom(dto => dto.DigitoFuerza))
                .ForMember(x => x.TIPO_IDENTIFICACION, map => map.MapFrom(dto => dto.TipoIdentificacion))
                .ForMember(x => x.IDENTIFICACION, map => map.MapFrom(dto => dto.Identificacion))
                .ForMember(x => x.CODIGO_MILITAR, map => map.MapFrom(dto => dto.CodigoMilitar))
                .ForMember(x => x.PRIMER_NOMBRE, map => map.MapFrom(dto => dto.PrimerNombre))
                .ForMember(x => x.SEGUNDO_NOMBRE, map => map.MapFrom(dto => dto.SegundoNombre))
                .ForMember(x => x.PRIMER_APELLIDO, map => map.MapFrom(dto => dto.PrimerApellido))
                .ForMember(x => x.SEGUNDO_APELLIDO, map => map.MapFrom(dto => dto.SegundoApellido))
                .ForMember(x => x.GRADO, map => map.MapFrom(dto => dto.Grado))
                .ForMember(x => x.UNIDAD_OPERATIVA, map => map.MapFrom(dto => dto.UnidadOperativa))
                .ReverseMap();

            CreateMap<CuentaDto, CuentaIntegracion>()
                .ForMember(x => x.IdCuenta, map => map.MapFrom(dto => dto.IdCuentaIntegracion))
                .ForMember(x => x.IdTipoProducto, map => map.MapFrom(dto => dto.IdTct))
                .ForMember(x => x.NumeroCuenta, map => map.MapFrom(dto => dto.NumeroCuenta))
                .ForMember(x => x.EstadoCuenta, map => map.MapFrom(dto => dto.IdEct))
                .ForMember(x => x.FechaCreacion, map => map.MapFrom(dto => dto.FechaCreacion))
                .ForMember(x => x.FechaCierre, map => map.MapFrom(dto => dto.FechaCierre))
                .ForMember(x => x.FechaPrimerAporte, map => map.MapFrom(dto => dto.FechaPrimerAporte))
                .ForMember(x => x.Saldo, map => map.MapFrom(dto => dto.Saldo))
                .ForMember(x => x.SaldoEnCanje, map => map.MapFrom(dto => dto.SaldoCanje))
                .ForMember(x => x.SaldoDisponible, map => map.MapFrom(dto => dto.SaldoDisponible))
                .ForMember(x => x.Cuotas, map => map.MapFrom(dto => dto.Cuotas))
                .ReverseMap();

            CreateMap<ConceptosSaldosBloqueosDto, ConceptosSaldosBloqueos>()
                .ReverseMap();

            CreateMap<DependienteDto, DependienteIntegracion>()
                .ForMember(x => x.TipoIdentificacion, map => map.MapFrom(dto => dto.TipoIdentificacion))
                .ForMember(x => x.Identificacion, map => map.MapFrom(dto => dto.Identificacion))
                .ForMember(x => x.NombreDependiente, map => map.MapFrom(dto => dto.Nombre))
                .ForMember(x => x.ParticDependiente, map => map.MapFrom(dto => dto.Participacion))
                .ReverseMap();

            CreateMap<AportesClienteDto, AporteCategoria>()
                .ForMember(x => x.IdCategoria, map => map.MapFrom(dto => dto.CGT_ID))
                .ForMember(x => x.CuotasAcumuladas, map => map.MapFrom(dto => dto.APC_CUOTAS_ACUMULADAS))
                .ForMember(x => x.FechaPrimeraCuota, map => map.MapFrom(dto => dto.APC_FECHA_PRIMERA_CUOTA))
                .ForMember(x => x.FechaUltimaCuota, map => map.MapFrom(dto => dto.APC_FECHA_ULTIMA_COUTA))
                .ReverseMap();

            CreateMap<CuentaDto, Cuenta>()
                .ForMember(x => x.CTA_ID_INTEGRACION, map => map.MapFrom(dto => dto.IdCuentaIntegracion))
                .ForMember(x => x.CLI_ID, map => map.MapFrom(dto => dto.IdCliente))
                .ForMember(x => x.CTA_NUMERO, map => map.MapFrom(dto => dto.NumeroCuenta))
                .ForMember(x => x.TCT_ID, map => map.MapFrom(dto => dto.IdTct))
                .ForMember(x => x.CTA_SALDO, map => map.MapFrom(dto => dto.Saldo))
                .ForMember(x => x.CTA_FECHA_CREACION, map => map.MapFrom(dto => dto.FechaCreacion))
                .ForMember(x => x.ECT_ID, map => map.MapFrom(dto => dto.IdEct))
                .ForMember(x => x.CCN_ID, map => map.MapFrom(dto => dto.IdCcn))
                .ForMember(x => x.DCT_ID, opt => opt.Ignore())
                .ForMember(x => x.TPA_ID, map => map.MapFrom(dto => dto.IdTpa))
                .ForMember(x => x.CTA_CUOTAS, map => map.MapFrom(dto => dto.Cuotas))
                .ForMember(x => x.CTA_FECHA_CIERRE, map => map.MapFrom(dto => dto.FechaCierre))
                .ForMember(x => x.CTA_FECHA_PRIMER_APORTE, map => map.MapFrom(dto => dto.FechaPrimerAporte))
                .ForMember(x => x.CTA_SALDO_CANJE, map => map.MapFrom(dto => dto.SaldoCanje))
                .ForMember(x => x.CTA_SALDO_DISPONIBLE, map => map.MapFrom(dto => dto.SaldoDisponible))
                .ForMember(x => x.CCT_ID, map => map.MapFrom(dto => dto.conceptoId))
                .ReverseMap();

            CreateMap<DependienteDto, Dependiente>()
                .ForMember(x => x.CLI_ID, map => map.MapFrom(dto => dto.IdCliente))
                .ForMember(x => x.TID_ID, map => map.MapFrom(dto => dto.TipoIdentificacion))
                .ForMember(x => x.DPT_IDENTIFICACION, map => map.MapFrom(dto => dto.Identificacion))
                .ForMember(x => x.DPT_NOMBRE, map => map.MapFrom(dto => dto.Nombre))
                .ForMember(x => x.DPT_PARTICIPACION, map => map.MapFrom(dto => dto.Participacion))
                .ReverseMap();

            CreateMap<AportesClienteDto, AportesCliente>()
                .ForMember(x => x.CLI_ID, map => map.MapFrom(dto => dto.CLI_ID))
                .ForMember(x => x.CGT_ID, map => map.MapFrom(dto => dto.CGT_ID))
                .ForMember(x => x.APC_CUOTAS_ACUMULADAS, map => map.MapFrom(dto => dto.APC_CUOTAS_ACUMULADAS))
                .ForMember(x => x.APC_FECHA_PRIMERA_CUOTA, map => map.MapFrom(dto => dto.APC_FECHA_PRIMERA_CUOTA))
                .ForMember(x => x.APC_FECHA_ULTIMA_COUTA, map => map.MapFrom(dto => dto.APC_FECHA_ULTIMA_COUTA))
                .ReverseMap();

            CreateMap<MovimientoDTO, Application.Dto.Movimiento>()
                .ForMember(x => x.AnoPeriodo, map => map.MapFrom(dto => dto.MVT_ANO_PERIODO))
                .ForMember(x => x.FechaProceso, map => map.MapFrom(dto => dto.MVT_FECHA_PROCESO))
                .ForMember(x => x.IdConcepto, map => map.MapFrom(dto => dto.CNC_ID))
                .ForMember(x => x.Valor, map => map.MapFrom(dto => dto.MVT_VALOR))
                .ForMember(x => x.TipoMovimiento, map => map.MapFrom(dto => dto.CAT_TIPO_MOVIMIENTO))
                .ReverseMap();

            CreateMap<MovimientoDTO, Domain.Entities.Movimiento>()
                .ForMember(x => x.MVT_ANO_PERIODO, map => map.MapFrom(dto => dto.MVT_ANO_PERIODO))
                .ForMember(x => x.MVT_FECHA_PROCESO, map => map.MapFrom(dto => dto.MVT_FECHA_PROCESO))
                .ForMember(x => x.CNC_ID, map => map.MapFrom(dto => dto.CNC_ID))
                .ForMember(x => x.MVT_VALOR, map => map.MapFrom(dto => dto.MVT_VALOR))
                .ForMember(x => x.MVT_FECHA_MOVIMIENTO, map => map.MapFrom(dto => dto.MVT_FECHA_MOVIMIENTO))
                .ForMember(x => x.CAT_TIPO_MOVIMIENTO, map => map.MapFrom(dto => dto.CAT_TIPO_MOVIMIENTO))
                .ForMember(x => x.DCT_ID, map => map.MapFrom(dto => dto.DCT_ID))
                .ReverseMap();

            CreateMap<CuentaAfiliado, CuentaAfiliadoDTO>()
                .ForMember(x => x.NumeroCuenta, map => map.MapFrom(dto => dto.CTA_NUMERO))
                .ForMember(x => x.IdConcepto, map => map.MapFrom(dto => dto.CNC_ID))
                .ForMember(x => x.Movimientos, map => map.MapFrom(dto => dto.MOVIMIENTOS))
                .ForMember(x => x.Saldo, map => map.MapFrom(dto => dto.SALDO))
                .ReverseMap();

            CreateMap<Cronograma, CronogramaDto>()
                .ForMember(x => x.Id, map => map.MapFrom(dto => dto.CRO_ID))
                .ForMember(x => x.IdFuerza, map => map.MapFrom(dto => dto.FRZ_ID))
                .ForMember(x => x.FuerzaDescripcion, map => map.MapFrom(dto => dto.FRZ_DESCRIPCION))
                .ForMember(x => x.IdUnidadEjecutora, map => map.MapFrom(dto => dto.UEJ_ID))
                .ForMember(x => x.NombreUnidadEjecutora, map => map.MapFrom(dto => dto.UEJ_NOMBRE))
                .ForMember(x => x.FechaReporte, map => map.MapFrom(dto => dto.CRO_FECHA_REPORTE))
                .ForMember(x => x.FechaInicio, map => map.MapFrom(dto => dto.CRO_FECHA_INICIO))
                .ForMember(x => x.FechaFin, map => map.MapFrom(dto => dto.CRO_FECHA_FIN))
                .ForMember(x => x.Periodo, map => map.MapFrom(dto => dto.CRO_PERIODO))
                .ForMember(x => x.IdFormato, map => map.MapFrom(dto => dto.FRT_ID))
                .ForMember(x => x.DescripcionFormato, map => map.MapFrom(dto => dto.FRT_DESCRIPCION))
                .ForMember(x => x.IdMedioEnvio, map => map.MapFrom(dto => dto.MDE_ID))
                .ForMember(x => x.DescripcionMedioEnvio, map => map.MapFrom(dto => dto.MDE_DESCRIPCION))
                .ReverseMap();

            CreateMap<Cronograma, EditarCronogramaDTO>()
                .ForMember(x => x.Id, map => map.MapFrom(dto => dto.CRO_ID))
                .ForMember(x => x.FechaReporte, map => map.MapFrom(dto => dto.CRO_FECHA_REPORTE))
                .ReverseMap();

            CreateMap<ConsultaAfiliacion, ConsultaAfiliacionesRequestDTO>()
                .ForMember(x => x.tipoafiliacion, map => map.MapFrom(dto => dto.TPF_ID))
                .ForMember(x => x.tipoDocumento, map => map.MapFrom(dto => dto.TID_ID))
                .ForMember(x => x.numeroDocumento, map => map.MapFrom(dto => dto.CLI_IDENTIFICACION))
                .ReverseMap();

            CreateMap<Afiliacion, AfiliacionDto>()
                .ForMember(x => x.idAfiliacion, map => map.MapFrom(dto => dto.AFL_ID))
                .ForMember(x => x.numeroRadicado, map => map.MapFrom(dto => dto.AFL_NUMERO_RADICADO))
                .ForMember(x => x.fechaRadicado, map => map.MapFrom(dto => dto.AFL_FECHA_RADICADO))
                .ForMember(x => x.nombresApellidos, map => map.MapFrom(dto => dto.CLI_NOMBRE_COMPLETO))
                .ForMember(x => x.cedula, map => map.MapFrom(dto => dto.CLI_IDENTIFICACION))
                .ForMember(x => x.estado, map => map.MapFrom(dto => dto.EAF_ID))
                .ForMember(x => x.campoCalidad, map => map.MapFrom(dto => dto.CLD_ID))
                .ForMember(x => x.tipoAfiliacion, map => map.MapFrom(dto => dto.TPF_ID))
                .ForMember(x => x.tramiteAfiliacion, map => map.MapFrom(dto => dto.AFL_TRAMITE_AFILIACION))
                .ForMember(x => x.fechaAlta, map => map.MapFrom(dto => dto.CLI_FECHA_ALTA))
                .ForMember(x => x.fechaPrimerAporte, map => map.MapFrom(dto => dto.AFL_FECHA_PRIMER_APORTE))
                .ForMember(x => x.fechaUltimoAporte, map => map.MapFrom(dto => dto.AFL_FECHA_ULTIMO_APORTE))
                .ForMember(x => x.numeroCuotas, map => map.MapFrom(dto => dto.AFL_NUMERO_CUOTAS))
                .ForMember(x => x.conservaAntiguedad, map => map.MapFrom(dto => dto.AFL_CONSERVA_ANTIGUEDAD))
                .ForMember(x => x.ratificacionCuotas, map => map.MapFrom(dto => dto.AFL_RATIFICACION_CUOTAS))
                .ForMember(x => x.campoObservaciones, map => map.MapFrom(dto => dto.AFL_OBSERVACIONES))
                .ForMember(x => x.numeroActoAdministrativo, map => map.MapFrom(dto => dto.AFL_NUMERO_ACTO_ADMINISTRATIVO))
                .ForMember(x => x.fechaNotificación, map => map.MapFrom(dto => dto.AFL_FECHA_NOTIFICACION))
                .ForMember(x => x.campoCesantias, map => map.MapFrom(dto => dto.AFL_CAMPO_CESANTIAS))
                .ForMember(x => x.activacionDescuento, map => map.MapFrom(dto => dto.AFL_ACTIVACION_DESCUENTO))
                .ForMember(x => x.liquidacionCuotaFondoSolidaridad, map => map.MapFrom(dto => dto.AFL_DERECHO_LIQUIDACION_CUOTAS))
                .ForMember(x => x.reintegroAportes, map => map.MapFrom(dto => dto.AFL_REINTEGRO_APORTES))
                .ForMember(x => x.periodoAportesDesde, map => map.MapFrom(dto => dto.AFL_PERIODO_APORTES_DESDE))
                .ForMember(x => x.periodoAportesHasta, map => map.MapFrom(dto => dto.AFL_PERIODO_APORTES_HASTA))
                .ForMember(x => x.asignacionBasicaMensual, map => map.MapFrom(dto => dto.AFL_ASIGNACION_BASICA_MENSUAL))
                .ForMember(x => x.derechoLiquidacionCuotas, map => map.MapFrom(dto => dto.AFL_DERECHO_LIQUIDACION_CUOTAS))
                .ForMember(x => x.campoObservacionesConceptualizacion, map => map.MapFrom(dto => dto.AFL_DESCRIPCION_PROCEDENCIA_AFILIACION))
                .ForMember(x => x.idFuerza, map => map.MapFrom(dto => dto.FRZ_ID))
                .ForMember(x => x.idCategoria, map => map.MapFrom(dto => dto.CTG_ID))
                .ForMember(x => x.idUnidadEjecutora, map => map.MapFrom(dto => dto.UEJ_ID))
                .ForMember(x => x.idTipofiliacionExtraordinaria, map => map.MapFrom(dto => dto.TPP_ID))
                .ForMember(x => x.idPorcentajeDescuento, map => map.MapFrom(dto => dto.PRC_ID))
                .ReverseMap();

            CreateMap<CausalBloqueoCuenta, CausalBloqueoCuentaDto>()
             .ForMember(x => x.Id, map => map.MapFrom(dto => dto.CSB_ID))
             .ForMember(x => x.Nombre, map => map.MapFrom(dto => dto.CSB_NOMBRE))
             .ForMember(x => x.Descripcion, map => map.MapFrom(dto => dto.CSB_DESCIPCION))
             .ForMember(x => x.Estado, map => map.MapFrom(dto => dto.CSB_ESTADO))
             .ReverseMap();


            CreateMap<BloqueoCuentaConcepto, BloqueoCuentaConceptoDto>()
             .ForMember(x => x.Id, map => map.MapFrom(dto => dto.CSB_ID))
             .ForMember(x => x.CausalBloqueoId, map => map.MapFrom(dto => dto.CSB_ID))
             .ForMember(x => x.ConceptoId, map => map.MapFrom(dto => dto.CCT_ID))
             .ForMember(x => x.CuentaId, map => map.MapFrom(dto => dto.CTA_ID))
             .ForMember(x => x.Monto, map => map.MapFrom(dto => dto.BCC_MONTO))
             .ForMember(x => x.Valor, map => map.MapFrom(dto => dto.BCC_VALOR))
             // .ForMember(x => x.Fecha, map => map.MapFrom(dto => dto.BCC_FECHA))
             .ForMember(x => x.TipoBloqueo, map => map.MapFrom(dto => dto.BCC_TIPO_BLOQUEO))
             .ForMember(x => x.Estado, map => map.MapFrom(dto => dto.BCC_ESTADO))
             .ForMember(x => x.CreadoPor, map => map.MapFrom(dto => dto.BCC_CREADOPOR))
             .ReverseMap();

            CreateMap<InfoCliente, InfoClienteDto>()
            .ForMember(x => x.ClienteId, map => map.MapFrom(dto => dto.CLI_ID))
            .ForMember(x => x.CategoriaId, map => map.MapFrom(dto => dto.CTG_ID))
            .ForMember(x => x.FuerzaId, map => map.MapFrom(dto => dto.FRZ_ID))
            .ForMember(x => x.UnidadEjecutoraId, map => map.MapFrom(dto => dto.UEJ_ID))
            .ForMember(x => x.GradoId, map => map.MapFrom(dto => dto.GRD_ID))
            .ForMember(x => x.Identificacion, map => map.MapFrom(dto => dto.CLI_IDENTIFICACION))
            .ForMember(x => x.PrimerNombre, map => map.MapFrom(dto => dto.CLI_PRIMER_NOMBRE))
            .ForMember(x => x.SegundoNombre, map => map.MapFrom(dto => dto.CLI_SEGUNDO_NOMBRE))
            .ForMember(x => x.PrimerApellido, map => map.MapFrom(dto => dto.CLI_PRIMER_APELLIDO))
            .ForMember(x => x.SegundoApellido, map => map.MapFrom(dto => dto.CLI_SEGUNDO_APELLIDO))
            .ForMember(x => x.TipoIdentificacionId, map => map.MapFrom(dto => dto.TID_ID))
            .ForMember(x => x.FechaAlta, map => map.MapFrom(dto => dto.CLI_FECHA_ALTA))
            .ForMember(x => x.FechaInscripcion, map => map.MapFrom(dto => dto.CLI_FECHA_INSCRIPCION))
            .ForMember(x => x.TipoAfiliacionId, map => map.MapFrom(dto => dto.TPF_ID))

            .ReverseMap();

            CreateMap<CausalEstadoCuenta, CausalEstadoCuentaDto>()
            .ForMember(x => x.CausalEstadoId, map => map.MapFrom(dto => dto.CCN_ID))
            .ForMember(x => x.EstadoCuentaId, map => map.MapFrom(dto => dto.ECT_ID))
            .ForMember(x => x.CausalCuentaDescripcion, map => map.MapFrom(dto => dto.CCN_DESCRIPCION))
            .ForMember(x => x.CausalActiva, map => map.MapFrom(dto => dto.CCN_ACTIVA))
            .ReverseMap();

            CreateMap<PorcentajeDescuento, PorcentajeDescuentoDto>()
            .ForMember(x => x.IdPorcentajeDescuento, map => map.MapFrom(dto => dto.PRC_ID))
            .ForMember(x => x.DescripcionPorcentajeDescuento, map => map.MapFrom(dto => dto.PRC_DESCRIPCION))
            .ForMember(x => x.ProductoDescuento, map => map.MapFrom(dto => dto.PRC_PRODUCTO))
            .ReverseMap();

            CreateMap<CuentaCliente, CuentaClienteDto>()
            .ForMember(x => x.CuentaId, map => map.MapFrom(dto => dto.CTA_ID))
            .ForMember(x => x.CuentaIdIntegracion, map => map.MapFrom(dto => dto.CTA_ID_INTEGRACION))
            .ForMember(x => x.NumeroCuenta, map => map.MapFrom(dto => dto.CTA_NUMERO))
            .ForMember(x => x.ClinteId, map => map.MapFrom(dto => dto.CLI_ID))
            .ForMember(x => x.TipoCuentaId, map => map.MapFrom(dto => dto.TCT_ID))
            .ForMember(x => x.EstadoCuentaId, map => map.MapFrom(dto => dto.ECT_ID))
            .ForMember(x => x.CausalEstadoId, map => map.MapFrom(dto => dto.CCN_ID))
            .ForMember(x => x.DocumentoId, map => map.MapFrom(dto => dto.DCT_ID))
            .ForMember(x => x.FechaCreacion, map => map.MapFrom(dto => dto.CTA_FECHA_CREACION))
            .ForMember(x => x.FechaCierre, map => map.MapFrom(dto => dto.CTA_FECHA_CIERRE))
            .ForMember(x => x.FechaPrimerAporte, map => map.MapFrom(dto => dto.CTA_FECHA_PRIMER_APORTE))
            .ForMember(x => x.Saldo, map => map.MapFrom(dto => dto.CTA_SALDO))
            .ForMember(x => x.SaldoCanje, map => map.MapFrom(dto => dto.CTA_SALDO_CANJE))
            .ForMember(x => x.SaldoDisponible, map => map.MapFrom(dto => dto.CTA_SALDO_DISPONIBLE))
            .ForMember(x => x.Cueotas, map => map.MapFrom(dto => dto.CTA_CUOTAS))
            .ForMember(x => x.CuentaBloqueo, map => map.MapFrom(dto => dto.CTA_BLOQUEO))
            .ForMember(x => x.NombreCuenta, map => map.MapFrom(dto => dto.TCT_DESCRIPCION))
            .ReverseMap();


            CreateMap<ConceptoCuenta, ConceptoCuentaDto>()
           .ForMember(x => x.CuentaId, map => map.MapFrom(dto => dto.CTA_ID))
           .ForMember(x => x.Id, map => map.MapFrom(dto => dto.CCT_ID))
           .ForMember(x => x.ConceptoId, map => map.MapFrom(dto => dto.CNC_ID))
           .ForMember(x => x.saldo, map => map.MapFrom(dto => dto.CCT_SALDO))
           .ForMember(x => x.FechaUltimoAporte, map => map.MapFrom(dto => dto.CCT_FECHA_ULTIMO_APORTE))
           .ForMember(x => x.Ingresos, map => map.MapFrom(dto => dto.CCT_INGRESOS))
           .ForMember(x => x.Sva, map => map.MapFrom(dto => dto.CCT_SVA))
           .ReverseMap();

            CreateMap<MovimientosCuenta, MovimientosCuentaDto>()
           .ForMember(x => x.MovimientoId, map => map.MapFrom(dto => dto.MVT_ID))
           .ForMember(x => x.ConceptoId, map => map.MapFrom(dto => dto.CNC_ID))
           .ForMember(x => x.FechaMovimiento, map => map.MapFrom(dto => dto.MVT_FECHA_MOVIMIENTO))
           .ForMember(x => x.FechaProceso, map => map.MapFrom(dto => dto.MVT_FECHA_PROCESO))
           .ForMember(x => x.DocumentoId, map => map.MapFrom(dto => dto.DCT_ID))
           .ForMember(x => x.PeriodoAno, map => map.MapFrom(dto => dto.MVT_ANO_PERIODO))
           .ForMember(x => x.TipoMovimiento, map => map.MapFrom(dto => dto.CAT_TIPO_MOVIMIENTO))
           .ForMember(x => x.Valor, map => map.MapFrom(dto => dto.MVT_VALOR))
           .ForMember(x => x.Cuentaid, map => map.MapFrom(dto => dto.CTA_ID))
           .ReverseMap();

            CreateMap<ProgramacionCierreMensual, ProgramacionCierreMensualDto>()
            .ForMember(x => x.Id, map => map.MapFrom(dto => dto.ID))
            .ForMember(x => x.IPC, map => map.MapFrom(dto => dto.IPC))
            .ForMember(x => x.FechaCargue, map => map.MapFrom(dto => dto.FECHA_CARGUE))
            .ForMember(x => x.FechaProcesamiento, map => map.MapFrom(dto => dto.FECHA_PROCESAMIENTO))
            .ForMember(x => x.TipoProceso, map => map.MapFrom(dto => dto.TIPO_PROCESO))
             .ForMember(x => x.TipoProcesoDesc, map => map.MapFrom(dto => dto.TIPO_PROCESO_DESC))
            .ForMember(x => x.CuentaAbonoCesantias, map => map.MapFrom(dto => dto.CUENTA_ABONO_CESANTIAS))
            .ForMember(x => x.CuentaAbonoAhorro, map => map.MapFrom(dto => dto.CUENTA_ABONO_AHORRO))
            .ForMember(x => x.ConceptosAhorro, map => map.MapFrom(dto => dto.CONCEPTOS_AHORRO))
            .ForMember(x => x.ConceptosCesantias, map => map.MapFrom(dto => dto.CONCEPTOS_CESANTIAS))
            .ForMember(x => x.Estado, map => map.MapFrom(dto => dto.ESTADO))
            .ForMember(x => x.EstadoDesc, map => map.MapFrom(dto => dto.ESTADO_DESC))
            .ForMember(x => x.GeneraActualizacion, map => map.MapFrom(dto => dto.GENERA_ACTUALIZACION))
            .ForMember(x => x.Anio, map => map.MapFrom(dto => dto.ANIO))
            .ForMember(x => x.Mes, map => map.MapFrom(dto => dto.MES)).ForMember(x => x.UsuarioProcesamiento, map => map.MapFrom(dto => dto.USUARIO_PROCESAMIENTO))
            .ReverseMap();

            CreateMap<RespuestaCierreMensual, RespuestaCierreMensualDto>()
           .ForMember(x => x.Id, map => map.MapFrom(dto => dto.ID))
           .ForMember(x => x.Estado, map => map.MapFrom(dto => dto.ESTADO))
           .ReverseMap();

            CreateMap<ReporteCierreMensual, ReporteCierreMensualDto>()
           .ForMember(x => x.IdProgramacion, map => map.MapFrom(dto => dto.ID_PROGRAMACION_CIERRE_MENSUAL))
           .ForMember(x => x.UnidadEjecutora, map => map.MapFrom(dto => dto.UNIDAD_EJECUTORA))
           .ForMember(x => x.UnidadEjecutoraDesc, map => map.MapFrom(dto => dto.UNIDAD_EJECUTORA_DESC))
           .ForMember(x => x.Concepto, map => map.MapFrom(dto => dto.CONCEPTO))
           .ForMember(x => x.TipoIdentificacion, map => map.MapFrom(dto => dto.CLI_ID))
           .ForMember(x => x.Identificacion, map => map.MapFrom(dto => dto.CLI_IDENTIFICACION))
           .ForMember(x => x.PrimerNombre, map => map.MapFrom(dto => dto.CLI_PRIMER_NOMBRE))
           .ForMember(x => x.SegundoNombre, map => map.MapFrom(dto => dto.CLI_SEGUNDO_NOMBRE))
           .ForMember(x => x.PrimerApellido, map => map.MapFrom(dto => dto.CLI_PRIMER_APELLIDO))
           .ForMember(x => x.SegundoApellido, map => map.MapFrom(dto => dto.CLI_SEGUNDO_APELLIDO))
           .ForMember(x => x.SaldoActual, map => map.MapFrom(dto => dto.SALDO_ACTUAL))
           .ForMember(x => x.SaldoAnterior, map => map.MapFrom(dto => dto.SALDO_ANTERIOR))
           .ForMember(x => x.SaldoInicialIntereses, map => map.MapFrom(dto => dto.SALDO_INICIAL_INTERES))
           .ForMember(x => x.SaldoInicialIngresos, map => map.MapFrom(dto => dto.SALDO_INICIAL_INGRESOS))
           .ForMember(x => x.ValorInteres, map => map.MapFrom(dto => dto.VALOR_INTERES))
           .ForMember(x => x.SaldoInteresCausado, map => map.MapFrom(dto => dto.SALDO_INTERES_CAUSADO))
           .ForMember(x => x.NuevoSaldo, map => map.MapFrom(dto => dto.NUEVO_SALDO))
           .ForMember(x => x.Periodo, map => map.MapFrom(dto => dto.PERIODO))
           .ForMember(x => x.IPC, map => map.MapFrom(dto => dto.IPC))
           .ReverseMap();
        }

    }
}
