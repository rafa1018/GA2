using GA2.Application.Dto;
using GA2.Domain.Entities;
using GA2.Transversals.Commons;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;
using System;
using System.Collections.Generic;
using System.Threading.Tasks;

namespace GA2.Domain.Core
{
    public interface ICreditoBusinessLogic
    {
        Task<Response<IEnumerable<RespuestaSolicitudObtenerTramiteDto>>> ObtenerTramiteSolicitud(PeticionSolicitudObtenerTramiteDto solicitud);
        Task<Response<IEnumerable<RespuestaFlujoDocumentosDto>>> ObtenerDocumentosFlujo(PeticionFlujoDocumentosDto solicitud);
        Task<Response<IEnumerable<DocumentosActRespuestaDto>>> ObtenerDocumentosActSolicitud(DocumentosActSolicitudDto request);
        Task<Response<IEnumerable<RespuestaObservacionTramiteDto>>> ObtenerObservacionTramite(PeticionObtenerObservacionTramiteDto request);
        Task<Response<ActualizaActividadTramiteDto>> ActualizaActividadTramite(ActividadTramiteSolicitudDto actualizacion);
        Task<FileResult> ObtenerFichaRiesgo(RequestFichaRiesgo request);
        Task<Response<ActualizaActividadTramiteDto>> EnviaSubsancionActividadTramite(ActividadTramiteSolicitudDto actualizacion);
        Task<Response<ActualizaActividadTramiteDto>> ApruebaActividadTramite(ActividadTramiteSolicitudDto actualizacion);
        Task<Response<CuentaDto>> ObtenerCuentaById(string clienteIdentificacion);
        Task<Response<SimulacionDatosPersonalesDto>> ObtenerSimulacionPersonales(string request);
        Task<Response<ActualizaActividadTramiteDto>> RechazarActividadTramite(ActividadTramiteSolicitudDto actualizacion);
        Task<Response<IEnumerable<ValidacionDocumentosDto>>> ValidarDocumentosFlujo(ValidacionDocumentosDto validacionDocumentosDto);
        Task<Response<IEnumerable<SolicitudCreditosDesembolsosDto>>> EliminarFuentesRecursosSolicitud(SolicitudCreditosDesembolsosDto request);
        Task<FileResult> ObtenerPagareCartaInstrucciones(Guid request);
        Task<ActionResult<Response<IEnumerable<SolicitudCreditosDesembolsosDto>>>> ObtenerFuentesRecursosSolicitud(Guid request);
        Task<Response<ActualizacionSolicitudCreditoDesemFirmaDto>> ObtenerSolicitudCredito(RequestSolicitudCreditoDto request);
        Task<Response<RespuestaSolicitudCreditoProductoDto>> ObtenerSolicCreditoProducto(PeticionSolicitudCreditoProductoDto peticionSolicitud);
        Task<Response<string>> CargaDocumentoSolicCreditoBase64(Base64FileDto request);
        Task<Response<SimulacionDatosPersonalesDto>> ActualizarPersonalesVivienda(SimulacionDatosPersonalesDto request);
        Task<Response<RespuestaCreditoBasicaDto>> ObtenerSolicCreditoBasica(PeticionCreditoBasicaDto peticionSolicitud);
        Task<Response<RespuestaCreditoFinancieroDto>> ObtenerSolicCreditoFinancieros(PeticionCreditoFinancieroDto peticionSolicitud);
        Task<Response<DatosFinancierosPersonalesDto>> ObtenerDatosFinancierosPersonales(string request);
        Task<FileResult> GenerarFormatoReparto(Guid request);
        Task<Response<ActualizacionSolicitudCreditoDesemFirmaDto>> ActualizaSolicCreditoFirmas(ActualizacionSolicitudCreditoDesemFirmaDto request);
        Task<Response<ActualizacionSolicitudCreditoDesemFirmaDto>> ActualizaSolicCreditoDesembolso(ActualizacionSolicitudCreditoDesemFirmaDto request);
        Task<Response<IEnumerable<EqivalenciaSimuladorDto>>> ObtenerEquivalenciasSimuladorCredito();
        Task<FileResult> DescargarDocumentos(string request);
        Task<Response<string>> CargarDocumentos(IFormFile request);
        Task<Response<DatosFinancierosDto>> CargarDatosFinancieros(DatosFinancierosDto request);
        Task<Response<SolicCreditoInfTecnicaDto>> CrearSolicCreditoInfTecnica(SolicCreditoInfTecnicaDto solicCreditoInfTecnica);
        Task<Response<DatosSolicCreditoDto>> CargarDatosSolicCreditoTasasDesembolso(DatosSolicCreditoDto request);
        Task<Response<DesistimientoDesembolsoDto>> DesistirDesembolsoSolicitud(DesistimientoDesembolsoDto request);
        Task<Response<DatosRepartoDto>> ObtenerDatosReparto(Guid request);
        Task<Response<CreditoFinancieroDto>> CrearSolicCreditoFinancieros(CreditoFinancieroDto request);
        Task<Response<SolicCreditoInfTecInmDto>> CrearSolicCreditoInfTecInm(SolicCreditoInfTecInmDto solicCreditoInfTecInm);
        Task<Response<IEnumerable<SolicitudCreditosDesembolsosDto>>> CrearSolicCreditoDesembolsos(IEnumerable<SolicitudCreditosDesembolsosDto> request);
        Task<Response<IEnumerable<SolicitudDesembolsoDto>>> ObtenerDesembolsosSolicitud(SolicitudDesembolsoDto request);
        Task<Response<SolicCreditoInfJuridicaDto>> CrearSolicCreditoInfJuridica(SolicCreditoInfJuridicaDto solicCreditoInfJuridica);
        Task<Response<SolicCreditoInfJurInmDto>> CrearSolicCreditoInfJurInm(SolicCreditoInfJurInmDto solicCreditoInfJurInm);
        Task<Response<SolicCreditoInfTecnicaDto>> ObtenerSolicCreditoInfTecnica(RequestSolicCreditoInfTecnicaDto requestSolicCreditoInfTecnica);
        Task<Response<IEnumerable<SolicCreditoInfTecInmDto>>> ObtenerSolicCreditoInfTecInm(RequestSolicCreditoInfTecInmDto requestSolicCreditoInfTecInm);
        Task<Response<SolicCreditoInfJuridicaDto>> ObtenerSolicCreditoInfJuridica(RequestSolicCreditoInfJuridicaDto requestSolicCreditoInfJuridica);
        Task<Response<IEnumerable<SolicCreditoInfJurInmDto>>> ObtenerSolicCreditoInfJurInm(RequestSolicCreditoInfJurInmDto requestSolicCreditoInfJurInm);
        Task<Response<ResponseDocumentoSolicCreditoDto>> CrearDocumentoSolicCredito(RequestDocumentoSolicCreditoDto requestDocumentoSolicCredito);
        Task<Response<SimulacionClienteDto>> ConsultarSimulacionCliente(string documento);
        Task<Response<string>> CargaDocumentoSolicCredito(IFormFile request);
        Task<FileResult> DescargaDocumentoSolicCredito(string filename);
        Task<FileResult> ObtenerDatosSolicComite(Guid guid);
        Task<FileResult> GenerarPDFPreAprobado(string request);
        Task<FileResult> GenerarActaComite(int id);
        Task<Response<SolicCreditoRecomendacionDto>> ActualizarSolicCreditoRecomendacion(SolicCreditoRecomendacionDto request);
        Task<Response<ConsultaSolicitudCreditoDto>> ConsultarSolicitudCredito(ConsultaSolicitudCreditoDto request);
        Task<Response<ConsultaSolicitudCreditoDto>> ActualizaSolicCreditoSeguro(DatosActualizaSolicCreditoSeguroDto request);
        Task<Response<IEnumerable<PlanillaSimulacionCreditoDto>>> CrearSimulacionCliente(CreacionSimulacionClienteDto request);
        Task<Response<TipoActividadDto>> CrearTipoActividad(TipoActividadDto tipoActividad);
        Task<Response<TipoActividadDto>> ActualizarTipoActividad(TipoActividadDto tipoActividad);
        Task<Response<TipoActividadDto>> ObtenerTipoActividadPorId(string tipoActividadid);
        Task<Response<TipoActividadDto>> EliminarTipoActividadPorid(string tipoActividadid);
        Task<Response<IEnumerable<TipoActividadDto>>> ObtenerTipoActividad();
        Task<Response<TipoDocumentoDto>> CrearTipoDocumento(TipoDocumentoDto tipodocumento);
        Task<Response<TipoDocumentoDto>> ActualizarTipoDocumento(TipoDocumentoDto tipodocumento);
        Task<Response<TipoDocumentoDto>> ObtenerTipoDocumentoPorId(string tipodocumentoid);
        Task<Response<TipoDocumentoDto>> EliminarTipoDocumentoPorid(string tipodocumentoid);
        Task<Response<IEnumerable<TipoDocumentoDto>>> ObtenerTipoDocumento();
        Task<Response<FlujoDto>> CrearFlujo(FlujoDto flujo);
        Task<Response<FlujoDto>> ActualizarFlujo(FlujoDto flujo);
        Task<Response<FlujoDto>> ObtenerFlujoPorId(string flujoid);
        Task<Response<FlujoDto>> EliminarFlujoPorid(string flujoid);
        Task<Response<IEnumerable<FlujoDto>>> ObtenerFlujo();
        Task<Response<FlujoTipoCreditoDto>> CrearFlujoTipoCredito(FlujoTipoCreditoDto flujotipoCredito);
        Task<Response<FlujoTipoCreditoDto>> ActualizarFlujoTipoCredito(FlujoTipoCreditoDto flujotipoCredito);
        Task<Response<FlujoTipoCreditoDto>> ObtenerFlujoTipoCreditoPorId(string flujotipoCreditoid);
        Task<Response<FlujoTipoCreditoDto>> EliminarFlujoTipoCreditoPorid(string flujotipoCreditoid);
        Task<Response<IEnumerable<FlujoTipoCreditoDto>>> ObtenerFlujoTipoCredito();
        Task<Response<ActividadFlujoDto>> CrearActividadFlujo(ActividadFlujoDto actividadflujo);
        Task<Response<ActividadFlujoDto>> ObtenerActividadFlujoPorId(string actividadflujoid);
        Task<Response<ActividadFlujoDto>> EliminarActividadFlujoPorid(string actividadflujoid);
        Task<Response<IEnumerable<ActividadFlujoDto>>> ObtenerActividadFlujo();
        Task<Response<UsuarioActividadDto>> CrearUsuarioActividad(UsuarioActividadDto usuarioactividad);
        Task<Response<UsuarioActividadDto>> ObtenerUsuarioActividadPorId(string usuarioactividadid);
        Task<Response<UsuarioActividadDto>> EliminarUsuarioActividadPorid(string usuarioactividadid);
        Task<Response<IEnumerable<UsuarioActividadDto>>> ObtenerUsuarioActividad();
        Task<Response<DocumentoActividadDto>> CrearDocumentoActividad(DocumentoActividadDto documentoactividad);
        Task<Response<DocumentoActividadDto>> ObtenerDocumentoActividadPorId(string documentoactividadid);
        Task<Response<DocumentoActividadDto>> EliminarDocumentoActividadPorid(string documentoactividadid);
        Task<Response<IEnumerable<DocumentoActividadDto>>> ObtenerDocumentoActividad();
        Task<Response<ConsecutivoDto>> ActualizarConsecutivo(ConsecutivoDto consecutivo);
        Task<Response<ColorGrillaDto>> ActualizarColorGrilla(ColorGrillaDto colorgrilla);
        Task<Response<AseguradorasDto>> ActualizarAseguradoras(AseguradorasDto aseguradoras);
        Task<Response<AlertaAutomaticasDto>> ActualizarAlertaAutomaticas(AlertaAutomaticasDto alertaautomaticas);
        Task<Response<EstadoSolicitudDto>> ActualizarEstadoSolicitud(EstadoSolicitudDto estadosolicitud);
        Task<Response<EstadoSolicitudDto>> ObtenerEstadoSolicitudPorId(string estadosolicitudid);
        Task<Response<SolicitudSimulacionDto>> CrearSolicitudSimulacionCredito(SolicitudSimulacionDto solicitudSimulacionDto);
        Task<Response<EstadoSolicitudDto>> EliminarEstadoSolicitudPorid(string estadosolicitudid);
        Task<Response<IEnumerable<EstadoSolicitudDto>>> ObtenerEstadoSolicitud();
        Task<Response<EstadoActividadDto>> ActualizarEstadoActividad(EstadoActividadDto estadoActividad);
        Task<Response<EstadoActividadDto>> ObtenerEstadoActividadPorId(string estadoActividadid);
        Task<Response<EstadoActividadDto>> EliminarEstadoActividadPorid(string estadoActividadid);
        Task<Response<IEnumerable<EstadoActividadDto>>> ObtenerEstadoActividad();
        Task<Response<EstadoSolicitudDto>> CrearEstadoSolicitud(EstadoSolicitudDto estadosolicitud);
        Task<Response<SMCSimulacionClienteDto>> CrearSimulacionClienteSMC(SMCSimulacionClienteDto sMCSimulacionClienteDto);
        Task<Response<AlertaAutomaticasDto>> CrearAlertaAutomaticas(AlertaAutomaticasDto alertaautomaticas);
        Task<Response<AlertaAutomaticasDto>> ObtenerAlertaAutomaticasPorId(string alertaautomaticasid);
        Task<Response<AlertaAutomaticasDto>> EliminarAlertaAutomaticasPorid(string alertaautomaticasid);
        Task<Response<IEnumerable<AlertaAutomaticasDto>>> ObtenerAlertaAutomaticas();
        Task<Response<ColorGrillaDto>> CrearColorGrilla(ColorGrillaDto colorgrilla);
        Task<Response<ColorGrillaDto>> ObtenerColorGrillaPorId(string colorgrillaId);
        Task<Response<ColorGrillaDto>> EliminarColorGrillaPorid(string colorgrillaId);
        Task<Response<IEnumerable<ColorGrillaDto>>> ObtenerColorGrilla();
        Task<Response<EstadoActividadDto>> CrearEstadoActividad(EstadoActividadDto estadoActividad);
        Task<Response<AseguradorasDto>> CrearAseguradoras(AseguradorasDto aseguradoras);
        Task<Response<AseguradorasDto>> ObtenerAseguradorasPorId(string aseguradorasid);
        Task<Response<AseguradorasDto>> EliminarAseguradorasPorid(string aseguradorasid);
        Task<Response<IEnumerable<AseguradorasDto>>> ObtenerAseguradoras();
        Task<Response<ConsecutivoDto>> CrearConsecutivo(ConsecutivoDto consecutivo);
        Task<Response<ConsecutivoDto>> ObtenerConsecutivoPorId(string consecutivoid);
        Task<Response<IEnumerable<ConsecutivoDto>>> ObtenerConsecutivo();
        Task<Response<ConsecutivoDto>> EliminarConsecutivoPorid(string consecutivoid);
        Task<Response<List<DatosComiteCreditoDto>>> ObtenerComiteCredito(DatosComiteCreditoDto datosComiteCredito);
        Task<Response<DatosComiteCreditoDto>> AprobarComiteCredito(DatosComiteCreditoDto datosComiteCredito);
        Task<Response<DatosComiteCreditoDto>> CrearComiteCredito(DatosComiteCreditoDto datosComiteCredito);
        Task<Response<IEnumerable<IntegranteComiteDto>>> ObtenerIntegranteComite();
        Task<Response<ComiteIntegranteDto>> CrearComiteCreditoIntegrante(ComiteIntegranteDto integrante);
        Task<Response<SimulacionDetalle>> CrearDetalleSimulacion(SimulacionDto simulacion);
        Task<Response<IEnumerable<TemaComiteDto>>> ObtenerTemasComite();
        Task<Response<IEnumerable<IntegrantePorComiteDto>>> ObtenerComiteCreditoIntegrante(IntegrantePorComiteDto integrantePorComite);
        Task<Response<TemaComiteCreditoDto>> CrearComiteCreditoTemas(TemaComiteCreditoDto temaComiteCredito);
        Task<Response<IEnumerable<SolicitudComiteDto>>> ObtenerComiteCreditoSolicitud(SolicitudComiteDto solicitudComite);
        Task<Response<SolicitudComiteCreacionDto>> CrearComiteCreditoSolicitud(SolicitudComiteCreacionDto solicitudComite);
        Task<Response<IEnumerable<TemaComiteCreditoDto>>> ObtenerComiteCreditoTemas(RequestTemaComiteCreditoDto requestTemaComite);
        Task<FileResult> ObtenerHistorialComercialBuro(RequestTuDto request);
        Task<Response<TasaSolicitudCreditoDto>> ActualizaSolicCreditoTasas(TasaSolicitudCreditoDto tasaSolicitudCredito);
        Task<Response<IEnumerable<FuenteRecursosDto>>> ObtenerFuentesRecursos();
        Task<FileResult> GenerarCesionLeasing(Guid request);
        Task<Response<DesembolsoCreditoSolicitudDto>> AplicarDesembolsoSolicitud(DesembolsoCreditoSolicitudDto desembolso);
        Task<Response<IEnumerable<ObtenerCausalDesistimientoDto>>> ObtenerCausalDesistimiento();
        Task<Response<SolicitudSimulacionDto>> CrearPreAprobado(SolicitudSimulacionDto request);

        Task<Response<FormularioCreditoBasicaDto>> FormularioCreditoBasica(Guid idSolicitudCredito);

        Task<Response<SocSolicitudInfobasicaDto>> CrearSolicCreditoBasicos(SocSolicitudInfobasicaDto infoBasica);
        Task<Response<IEnumerable<TasaHogarCiudadDto>>> ObtenerTasasHogarCiudad();

        Task<Response<FormularioCreditoConyugueDto>> FormularioCreditoConyugue(Guid idSolicitudCredito);

        Task<Response<InformacionConyugueDto>> CrearSolicCreditoConyugue(InformacionConyugueDto infoConyugue);



    }
}